/*
 * AlmaRM Model - Java represenation of the model AlmaRM is built on.
 * Copyright (C) 2018  ALMA MATER STUDIORUM - Universit√† di Bologna
 *
 * This file is part of AlmaRM Model.
 *
 * AlmaRM Model is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * AlmaRM Model is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AlmaRM Model.  If not, see <https://www.gnu.org/licenses/>.
 */
package it.unibo.almarm.model.attori;

// Generated 19-feb-2008 15.24.59 by Hibernate Tools 3.2.0.CR1

import it.unibo.almarm.model.luoghi.Localita;
import it.unibo.almarm.model.luoghi.Nazione;
import it.unibo.almarm.model.luoghi.Territorio;

import java.util.Date;

/**
 * AttoreIndirizzo generated by hbm2java
 */
public class AttoreIndirizzo implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	public static final String TIPO_INDIRIZZO_SEDE_LEGALE="AS";
	
	private Long id;
	
	private String indirizzo;
	private String tipo;
	private Date dataInizio;

	private String libero;
	private String cap;
	private Localita localita;
	private String localita_1;
	private Territorio territorio;
	private String territorio_1;
	private String frazione;
	
	// campi non persistiti
	private Nazione nazioneDraft;
	
	public AttoreIndirizzo() {
	}

	public AttoreIndirizzo(Long id) {
		this.id = id;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getIndirizzo() {
		return indirizzo;
	}

	public void setIndirizzo(String indirizzo) {
		this.indirizzo = indirizzo;
	}

	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	public Date getDataInizio() {
		return dataInizio;
	}

	public void setDataInizio(Date dataInizio) {
		this.dataInizio = dataInizio;
	}

	public String getLibero() {
		return libero;
	}

	public void setLibero(String libero) {
		this.libero = libero;
	}

	public String getCap() {
		return cap;
	}

	public void setCap(String cap) {
		this.cap = cap;
	}

	public Localita getLocalita() {
		return localita;
	}

	public void setLocalita(Localita localita) {
		this.localita = localita;
	}

	public String getLocalita_1() {
		if ((localita_1 == null) && (localita != null) && (localita.getTerritorio() != null) && (localita.getTerritorio().getRegione() != null) && (localita.getTerritorio().getRegione().getNazione() != null) && (!localita.getTerritorio().getRegione().getNazione().isItalia()))
			localita_1 = localita.getLocalita();
		return localita_1;
	}

	public void setLocalita_1(String localita_1) {
		this.localita_1 = localita_1;
	}

	
	public Territorio getTerritorio() {
		if ((territorio == null) && (localita != null))
			return localita.getTerritorio();
		return territorio;
	}

	public void setTerritorio(Territorio territorio) {
		this.territorio = territorio;
	}


	public String getTerritorio_1() {
		if ((territorio_1 == null) && (localita != null) && (localita.getTerritorio() != null) && (localita.getTerritorio().getRegione() != null) && (localita.getTerritorio().getRegione().getNazione() != null) && (!localita.getTerritorio().getRegione().getNazione().isItalia()))
			territorio_1 = localita.getTerritorio().getTerritorio();
		return territorio_1;
	}

	public void setTerritorio_1(String territorio_1) {
		this.territorio_1 = territorio_1;
	}

	public String getFrazione() {
		return frazione;
	}

	public void setFrazione(String frazione) {
		this.frazione = frazione;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		if (id  != null)
			return  prime * result + id.hashCode();
		
		result = prime * result + ((cap == null) ? 0 : cap.hashCode());
		result = prime * result
				+ ((dataInizio == null) ? 0 : dataInizio.hashCode());
		result = prime * result
				+ ((frazione == null) ? 0 : frazione.hashCode());
		result = prime * result
				+ ((indirizzo == null) ? 0 : indirizzo.hashCode());
		result = prime * result + ((libero == null) ? 0 : libero.hashCode());
		result = prime * result
				+ ((localita == null) ? 0 : localita.hashCode());
		result = prime * result
				+ ((localita_1 == null) ? 0 : localita_1.hashCode());
		result = prime * result + ((tipo == null) ? 0 : tipo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof AttoreIndirizzo))
			return false;
		final AttoreIndirizzo other = (AttoreIndirizzo) obj;
		if (this.id != null) 
			return this.id.equals(other.getId());
		else if(other.getId() != null)
			return false;
		if (cap == null) {
			if (other.getCap() != null)
				return false;
		} else if (!cap.equals(other.getCap()))
			return false;
		if (dataInizio == null) {
			if (other.getDataInizio() != null)
				return false;
		} else if (!dataInizio.equals(other.getDataInizio()))
			return false;
		if (frazione == null) {
			if (other.getFrazione() != null)
				return false;
		} else if (!frazione.equals(other.getFrazione()))
			return false;
		if (indirizzo == null) {
			if (other.getIndirizzo() != null)
				return false;
		} else if (!indirizzo.equals(other.getIndirizzo()))
			return false;
		if (libero == null) {
			if (other.getLibero() != null)
				return false;
		} else if (!libero.equals(other.getLibero()))
			return false;
		if (localita == null) {
			if (other.getLocalita() != null)
				return false;
		} else if (!localita.equals(other.getLocalita()))
			return false;
		if (this.getLocalita_1() == null) {
			if (other.getLocalita_1() != null)
				return false;
		} else if (!this.getLocalita_1().equals(other.getLocalita_1()))
			return false;
		if (tipo == null) {
			if (other.getTipo() != null)
				return false;
		} else if (!tipo.equals(other.getTipo()))
			return false;
		return true;
	}

	public boolean isItaliano()
	{
		if (localita == null)
			return false;
		if ((localita.getTerritorio() != null) && (localita.getTerritorio().getRegione() != null) && (localita.getTerritorio().getRegione().getNazione() != null))
			return localita.getTerritorio().getRegione().getNazione().isItalia();
		return false;
	}
	
	public Nazione getNazione()
	{
		if ((localita!=null) && (localita.getTerritorio() != null) && (localita.getTerritorio().getRegione() != null))
			return localita.getTerritorio().getRegione().getNazione();
		return new Nazione();
	}

	public Nazione getNazioneDraft() {
		return nazioneDraft;
	}

	public void setNazioneDraft(Nazione nazioneDraft) {
		this.nazioneDraft = nazioneDraft;
	}
}
