/*
 * AlmaRM Model - Java represenation of the model AlmaRM is built on.
 * Copyright (C) 2018  ALMA MATER STUDIORUM - Universit√† di Bologna
 *
 * This file is part of AlmaRM Model.
 *
 * AlmaRM Model is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * AlmaRM Model is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AlmaRM Model.  If not, see <https://www.gnu.org/licenses/>.
 */
package it.unibo.almarm.model.attori;


import it.unibo.almarm.model.profilazione.AmbitoAccordo;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

// Generated 20-feb-2008 13.39.57 by Hibernate Tools 3.2.0.CR1

/**
 * EsternoPersona generated by hbm2java
 */
public class EsternoPersona implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Long id;
	private Persona persona;
	private Esterno esterno;
	private String  tipoContatto; //non usato
	private String  qualifica;    // campo libero introdotto dall'utente
	private TipoUtente  tipoUtente;
	
	private Set<EsternoPersonaAmbito> esternoPersonaAmbiti = new HashSet<EsternoPersonaAmbito>(0);
	private Set<EsternoPersonaTelefono> esternoPersonaTelefoni = new HashSet<EsternoPersonaTelefono>();
	private Set<EsternoPersonaEmail> esternoPersonaEmail = new HashSet<EsternoPersonaEmail>();
	
	public EsternoPersona() {
	}

	public EsternoPersona(Long id) {
		this.id = id;
	}

	public EsternoPersona(Long id, Persona persona, Esterno esterno,
			String tipoContatto, String qualifica) {
		this.id = id;
		this.persona = persona;
		this.esterno = esterno;
		this.tipoContatto = tipoContatto;
		this.qualifica = qualifica;
	}
	
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getTipoContatto() {
		return this.tipoContatto;
	}

	public void setTipoContatto(String tipoContatto) {
		this.tipoContatto = tipoContatto;
	}

	public String getQualifica() {
		return this.qualifica;
	}

	public void setQualifica(String qualifica) {
		this.qualifica = qualifica;
	}

	public Persona getPersona() {
		return persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	public Esterno getEsterno() {
		return esterno;
	}

	public void setEsterno(Esterno esterno) {
		this.esterno = esterno;
	}

	public TipoUtente getTipoUtente() {
		if (tipoUtente==null)
		{
			// TODO : spostare in tipoUtenteManager
			
			tipoUtente=new TipoUtente();
			tipoUtente.setDescrizione("");
			tipoUtente.setId("");
		}
		return tipoUtente;
	}

	public void setTipoUtente(TipoUtente tipoUtente) {
		this.tipoUtente = tipoUtente;
	}
	public Set<EsternoPersonaAmbito> getEsternoPersonaAmbiti() {
		return esternoPersonaAmbiti;
	}

	public void setEsternoPersonaAmbiti(
			Set<EsternoPersonaAmbito> esternoPersonaAmbiti) {
		this.esternoPersonaAmbiti = esternoPersonaAmbiti;
	}
	
	// -------------------------------------------------------------------
	// INIZIO PROPRIETA NON MAPPATE SU HBM
	// -------------------------------------------------------------------

	
	// Funzioni di supporto per le pagine web per la  compilazione della 
	// relazione Esterno-Settoriattivita nel modello
	
	public List<AmbitoAccordo> getAmbitiAccordo() {
		List<AmbitoAccordo> lst=new ArrayList<AmbitoAccordo>();
		AmbitoAccordo ambitoAccordo=null;
		if ((this.esternoPersonaAmbiti!=null) && (!this.esternoPersonaAmbiti.isEmpty()))
		{
			for (EsternoPersonaAmbito el : this.esternoPersonaAmbiti) 
			{
				ambitoAccordo=el.getAmbitoAccordo();
				if (ambitoAccordo!=null)
					lst.add(ambitoAccordo);
			}
		}
		
		return lst;
	}
	
	public void setAmbitiAccordo(List<AmbitoAccordo> ambitiAccordo) {
		esternoPersonaAmbiti.clear();
		if (ambitiAccordo!=null)
			for (AmbitoAccordo ambitoAccordo: ambitiAccordo) 
			{
				addAmbitoAccordo(ambitoAccordo);
			}
	}
	
	public void addAmbitoAccordo(AmbitoAccordo ambitoAccordo) {
		EsternoPersonaAmbito relazione = new EsternoPersonaAmbito();
		relazione.setAmbitoAccordo(ambitoAccordo);
		this.esternoPersonaAmbiti.add(relazione);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((esterno == null) ? 0 : esterno.hashCode());
		result = prime * result + ((persona == null) ? 0 : persona.hashCode());
		result = prime * result
				+ ((tipoUtente == null) ? 0 : tipoUtente.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof EsternoPersona))
			return false;
		EsternoPersona other = (EsternoPersona) obj;
		if (this.id != null && other.getId() != null)
			return this.id.equals(other.getId());
		if (esterno == null) {
			if (other.getEsterno() != null)
				return false;
		} else if (!esterno.equals(other.getEsterno()))
			return false;
		if (persona == null) {
			if (other.getPersona() != null)
				return false;
		} else if (!persona.equals(other.getPersona()))
			return false;
		if (tipoUtente == null) {
			if (other.getTipoUtente() != null)
				return false;
		} else if (!tipoUtente.equals(other.getTipoUtente()))
			return false;
		return true;
	}

	public Set<EsternoPersonaTelefono> getEsternoPersonaTelefoni() {
		return esternoPersonaTelefoni;
	}

	public void setEsternoPersonaTelefoni(
			Set<EsternoPersonaTelefono> esternoPersonaTelefoni) {
		this.esternoPersonaTelefoni = esternoPersonaTelefoni;
	}

	public Set<EsternoPersonaEmail> getEsternoPersonaEmail() {
		return esternoPersonaEmail;
	}

	public void setEsternoPersonaEmail(Set<EsternoPersonaEmail> esternoPersonaEmail) {
		this.esternoPersonaEmail = esternoPersonaEmail;
	}

}
