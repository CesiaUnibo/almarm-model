/*
 * AlmaRM Model - Java represenation of the model AlmaRM is built on.
 * Copyright (C) 2018  ALMA MATER STUDIORUM - Università di Bologna
 *
 * This file is part of AlmaRM Model.
 *
 * AlmaRM Model is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * AlmaRM Model is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AlmaRM Model.  If not, see <https://www.gnu.org/licenses/>.
 */
package it.unibo.almarm.model.esterni;

import it.unibo.almarm.webapp.mvc.Lingua;

import java.util.Comparator;

import org.regola.util.Ognl;


// Generated 18-gen-2008 12.52.20 by Hibernate Tools 3.2.0.CR1

/**
 * SettoreAttivita generated by hbm2java
 */
public class SettoreAttivita implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Long id;
	private String descrizione;
	private String descrizioneIng;
	private Integer ordine;

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getDescrizione() {
		return this.descrizione;
	}

	public void setDescrizione(String descrizione) {
		this.descrizione = descrizione;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((descrizione == null) ? 0 : descrizione.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof SettoreAttivita))
			return false;
		final SettoreAttivita other = (SettoreAttivita) obj;
		if (descrizione == null) {
			if (other.getDescrizione() != null)
				return false;
		} else if (!descrizione.equals(other.getDescrizione()))
			return false;
		return true;
	}
	
	@Override
	public String toString() 
	{
		// Questo metodo è stato cambiato altrimenti non ri riesce a far funzionare l'interfaccia:
		// il problema sta nel fatto che per il tag forms:chechboxes non funziona il compare fra gli oggetti 
		// per settare i checked se il toString di questo oggetto no ritorna solo l'id
		// vedi richiestadatianag.jsp
		return String.valueOf(id);
	}

	public String getDescrizioneIng() {
		return descrizioneIng;
	}

	public void setDescrizioneIng(String descrizioneIng) {
		this.descrizioneIng = descrizioneIng;
	}

	public String getLocaleDescrizione() {
		Object propertyValue = Ognl.getValue("descrizione"+Lingua.getSuffissoNomeCampoDiModello(), this);
		if (propertyValue != null)
		{
			String val=(String)propertyValue;
			return val;
		}
		return "";
	}
	
	public Integer getOrdine() {
		return ordine;
	}

	public void setOrdine(Integer ordine) {
		this.ordine = ordine;
	}

	public static class SettoreAttivitaComparator implements Comparator<SettoreAttivita>
	{
		public int compare(SettoreAttivita arg0, SettoreAttivita arg1) {
		   long valore0 =(arg0.getOrdine()==null)? 0: arg0.getOrdine().intValue();
		   long valore1 =(arg1.getOrdine()==null)? 0: arg1.getOrdine().intValue();
		   if (valore0<valore1)
				return 0;
		   else if (valore0>valore1)
				return 1;
			
			if (arg0.getDescrizione().toLowerCase().compareTo(arg1.getDescrizione().toLowerCase()) < 0)
				return 0;
			else 
				return 1;
		}
	}
}
